// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projects.Domain;

namespace Projects.Domain.Migrations
{
    [DbContext(typeof(ProjectsContext))]
    [Migration("20191215205903_populateTechnology")]
    partial class populateTechnology
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projects.Domain.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Projects.Domain.Models.ProjectTechnology", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TechnologieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectId", "TechnologieId");

                    b.HasIndex("TechnologieId");

                    b.ToTable("ProjectTechnologies");
                });

            modelBuilder.Entity("Projects.Domain.Models.ProjectUser", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProjectId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectUsers");
                });

            modelBuilder.Entity("Projects.Domain.Models.Technology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Technologies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a739af89-b1f9-4c46-afe8-04ba3688812e"),
                            Name = "Java"
                        },
                        new
                        {
                            Id = new Guid("5b3252a0-c632-453b-a53d-908a3aac8532"),
                            Name = "JavaScript"
                        },
                        new
                        {
                            Id = new Guid("e6170ad3-d4e7-4fd9-877c-4dcac284b404"),
                            Name = ".Net"
                        },
                        new
                        {
                            Id = new Guid("90ff5a6e-bb7b-4bee-9f87-0a419af29610"),
                            Name = "C#"
                        },
                        new
                        {
                            Id = new Guid("815e3d5d-6f6a-4485-a90a-e7052ba94cc3"),
                            Name = "Unity"
                        },
                        new
                        {
                            Id = new Guid("e40d49ce-3f7b-473e-9a70-7a05d3f028f9"),
                            Name = "Node.js"
                        },
                        new
                        {
                            Id = new Guid("ceb93b62-a1c3-4f38-af79-61165d7adace"),
                            Name = "Angular"
                        },
                        new
                        {
                            Id = new Guid("5918de07-e128-4d49-aa37-5d43d5b8a2e7"),
                            Name = "React"
                        },
                        new
                        {
                            Id = new Guid("6de4d2a9-ef02-4f22-ba7f-33411f4df1a9"),
                            Name = "Vue"
                        },
                        new
                        {
                            Id = new Guid("89cc84b3-bba8-43e9-b835-f7f442956713"),
                            Name = "Express"
                        },
                        new
                        {
                            Id = new Guid("6bb360d1-3600-44aa-8cd5-803ebc9e9b25"),
                            Name = "Swift"
                        },
                        new
                        {
                            Id = new Guid("c38cb208-dbee-490d-8f80-40325c988fb5"),
                            Name = "MongoDb"
                        },
                        new
                        {
                            Id = new Guid("44ef72e6-c436-461e-bf13-3aba4d47a950"),
                            Name = "C++"
                        },
                        new
                        {
                            Id = new Guid("c6b430ad-0f69-4a72-9580-42406e7b0149"),
                            Name = "Python"
                        },
                        new
                        {
                            Id = new Guid("f83ebe3f-a926-4e62-81cf-4cf3da00e91c"),
                            Name = "C"
                        });
                });

            modelBuilder.Entity("Projects.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Projects.Domain.Models.ProjectTechnology", b =>
                {
                    b.HasOne("Projects.Domain.Models.Project", "Project")
                        .WithMany("ProjectTechnologies")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projects.Domain.Models.Technology", "Technologie")
                        .WithMany("ProjectTechnologies")
                        .HasForeignKey("TechnologieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Projects.Domain.Models.ProjectUser", b =>
                {
                    b.HasOne("Projects.Domain.Models.Project", "Project")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projects.Domain.Models.User", "User")
                        .WithMany("ProjectUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
